{"version":3,"file":"static/js/158.db07a10b.chunk.js","mappings":"+RAGaA,EAAgBC,EAAAA,GAAAA,IAAH,+CAIbC,EAAaD,EAAAA,GAAAA,KAAH,yEAIVE,EAAcF,EAAAA,GAAAA,MAAH,8EAKXG,EAASH,EAAAA,GAAAA,OAAH,6MAYNI,EAAsBJ,EAAAA,GAAAA,GAAH,+CAInBK,GAAYL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,wKAWTO,EAAaP,EAAAA,GAAAA,GAAH,6E,SCuBvB,EArDe,WACb,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,EAAcJ,EAAaK,IAAI,SA2BrC,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,8GAE+BC,EAAAA,EAAAA,IAAYH,GAF3C,OAEUI,EAFV,OAGIZ,EAAUY,GAHd,gDAKIC,QAAQC,IAAR,MALJ,0DAHc,sBACTN,GADS,mCAWdO,EACD,GAAE,CAACP,KAGF,UAACnB,EAAD,YACE,UAACE,EAAD,CAAYyB,SAvBK,SAAAC,GACnBA,EAAEC,iBAEFb,EAAgB,CAAEJ,MAAOA,IACzBC,EAAS,GACV,EAkBG,WACE,SAACV,EAAD,CAAa2B,KAAK,OAAOC,MAAOnB,EAAOoB,SA5BxB,SAAAJ,GACnBf,EAASe,EAAEK,cAAcF,MAAMG,cAChC,KA2BK,SAAC9B,EAAD,CAAQ0B,KAAK,SAAb,wBAGF,SAACzB,EAAD,UACGK,EAAOyB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,SAAC7B,EAAD,WACE,SAACF,EAAD,CAAWgC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMvB,GAA/C,SACGoB,KAFYD,EADP,QAUnB,C,8LC9DDK,EAAAA,GAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,GAAAA,SAAAA,OAAwB,CACtBC,QAAS,mCACTC,SAAU,SAGL,IAAMC,EAAiB,mCAAG,oGACRH,EAAAA,GAAAA,IAAA,uBADQ,cACzBI,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAKjBzB,EAAW,mCAAG,WAAMV,GAAN,uFACF6B,EAAAA,GAAAA,IAAA,8BAAiC7B,IAD/B,cACnBiC,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,sDAKXC,EAAe,mCAAG,WAAMC,GAAN,uFACNR,EAAAA,GAAAA,IAAA,iBAAoBQ,IADd,cACvBJ,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfI,EAAY,mCAAG,WAAMD,GAAN,uFACHR,EAAAA,GAAAA,IAAA,iBAAoBQ,EAApB,aADG,cACpBJ,EADoB,yBAEnBA,EAASC,KAAKK,MAFK,2CAAH,sDAKZC,EAAe,mCAAG,WAAMH,GAAN,uFACNR,EAAAA,GAAAA,IAAA,iBAAoBQ,EAApB,aADM,cACvBJ,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qD","sources":["pages/Movies.styled.js","pages/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesSection = styled.div`\n  padding: 28px 32px;\n`;\n\nexport const MoviesForm = styled.form`\n  display: inline-flex;\n  margin-bottom: 28px;\n`;\nexport const MoviesInput = styled.input`\n  padding: 8px;\n  width: 200px;\n  font-size: 18px;\n`;\nexport const Button = styled.button`\n  width: 70px;\n  height: 40px;\n  font-size: 16px;\n  background-color: #faebd7;\n  border: 1px solid black;\n  :hover {\n    background-color: #c27ba0;\n    color: #ffffff;\n  }\n`;\n\nexport const MoviesListContainer = styled.ul`\n  padding-left: 16px;\n`;\n\nexport const LinkTitle = styled(Link)`\n  text-decoration: underline;\n  color: black;\n  font-weight: 500;\n  font-size: 20px;\n  color: black;\n  :hover {\n    color: #c27ba0;\n  }\n`;\n\nexport const MoviesItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { searchMovie } from '../services/api';\nimport {\n  MoviesSection,\n  MoviesForm,\n  MoviesInput,\n  Button,\n  MoviesListContainer,\n  LinkTitle,\n  MoviesItem,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n  const movieSearch = searchParams.get('query');\n\n  const handleChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ query: query });\n    setQuery('');\n  };\n\n  useEffect(() => {\n    if (!movieSearch) return;\n\n    async function renderMovie() {\n      try {\n        const moviesResult = await searchMovie(movieSearch);\n        setMovies(moviesResult);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    renderMovie();\n  }, [movieSearch]);\n\n  return (\n    <MoviesSection>\n      <MoviesForm onSubmit={handleSubmit}>\n        <MoviesInput type=\"text\" value={query} onChange={handleChange} />\n        <Button type=\"submit\">Search</Button>\n      </MoviesForm>\n\n      <MoviesListContainer>\n        {movies.map(({ id, original_title }) => (\n          <MoviesItem key={id}>\n            <LinkTitle to={`/movies/${id}`} state={{ from: location }}>\n              {original_title}\n            </LinkTitle>\n          </MoviesItem>\n        ))}\n      </MoviesListContainer>\n    </MoviesSection>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '5bf2301def796bd57cd8c3257ce93f54',\n  language: 'en-US',\n};\n\nexport const getTrandingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day`);\n  return response.data.results;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`);\n  return response.data.results;\n};\n"],"names":["MoviesSection","styled","MoviesForm","MoviesInput","Button","MoviesListContainer","LinkTitle","Link","MoviesItem","useState","movies","setMovies","query","setQuery","useSearchParams","searchParams","setSearchParams","location","useLocation","movieSearch","get","useEffect","searchMovie","moviesResult","console","log","renderMovie","onSubmit","e","preventDefault","type","value","onChange","currentTarget","toLowerCase","map","id","original_title","to","state","from","axios","api_key","language","getTrandingMovies","response","data","results","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}