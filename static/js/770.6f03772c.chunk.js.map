{"version":3,"file":"static/js/770.6f03772c.chunk.js","mappings":"iPAEaA,EAAWC,EAAAA,GAAAA,GAAH,gDAIRC,EAAWD,EAAAA,GAAAA,EAAH,gE,SCmCrB,EApCa,WACX,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GACVI,KAAKL,GACLM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACN,IAEgB,IAAhBF,EAAKW,OACA,kDAGP,+BACE,wBACGX,EAAKY,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,GAC1C,OACE,UAACpB,EAAD,YACE,gBACEqB,IAAKJ,EAAY,UAnBf,mCAmBe,OAAgBA,GAlB/B,qBAmBFK,IAAI,GACJC,MAAM,SAER,SAACrB,EAAD,UAAWgB,KACX,UAAChB,EAAD,yBAAsBiB,OAPTC,EAUlB,OAIR,C,8LCrCDI,EAAAA,GAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,GAAAA,SAAAA,OAAwB,CACtBC,QAAS,mCACTC,SAAU,SAGL,IAAMC,EAAiB,mCAAG,oGACRH,EAAAA,GAAAA,IAAA,uBADQ,cACzBI,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAKjBC,EAAW,mCAAG,WAAMC,GAAN,uFACFR,EAAAA,GAAAA,IAAA,8BAAiCQ,IAD/B,cACnBJ,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,sDAKXG,EAAe,mCAAG,WAAM3B,GAAN,uFACNkB,EAAAA,GAAAA,IAAA,iBAAoBlB,IADd,cACvBsB,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfpB,EAAY,mCAAG,WAAMH,GAAN,uFACHkB,EAAAA,GAAAA,IAAA,iBAAoBlB,EAApB,aADG,cACpBsB,EADoB,yBAEnBA,EAASC,KAAKzB,MAFK,2CAAH,sDAKZ8B,EAAe,mCAAG,WAAM5B,GAAN,uFACNkB,EAAAA,GAAAA,IAAA,iBAAoBlB,EAApB,aADM,cACvBsB,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qD","sources":["components/Cast.styled.js","components/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastItem = styled.li`\n  margin-bottom: 32px;\n`;\n\nexport const CastInfo = styled.p`\n  margin-top: 8px;\n  font-size: 16px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from '../services/api';\nimport { CastItem, CastInfo } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  const baseURL = 'https://image.tmdb.org/t/p/w200';\n  const noImage = './image/images.jpg';\n\n  useEffect(() => {\n    getMovieCast(movieId)\n      .then(setCast)\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  if (cast.length === 0) {\n    return 'There is no cast information for this film yet';\n  }\n  return (\n    <>\n      <ul>\n        {cast.map(({ profile_path, name, character, id }) => {\n          return (\n            <CastItem key={id}>\n              <img\n                src={profile_path ? `${baseURL}${profile_path}` : noImage}\n                alt=\"\"\n                width=\"200\"\n              />\n              <CastInfo>{name}</CastInfo>\n              <CastInfo>Character: {character}</CastInfo>\n            </CastItem>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '5bf2301def796bd57cd8c3257ce93f54',\n  language: 'en-US',\n};\n\nexport const getTrandingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day`);\n  return response.data.results;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`);\n  return response.data.results;\n};\n"],"names":["CastItem","styled","CastInfo","useState","cast","setCast","movieId","useParams","useEffect","getMovieCast","then","catch","error","console","log","length","map","profile_path","name","character","id","src","alt","width","axios","api_key","language","getTrandingMovies","response","data","results","searchMovie","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}